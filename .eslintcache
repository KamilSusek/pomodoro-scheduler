[{"F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\index.tsx":"1","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\reportWebVitals.ts":"2","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\App.tsx":"3","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\clock\\ClockContainer.tsx":"4","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\clock\\Clock.tsx":"5","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\clock\\ClockController.tsx":"6","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\clock\\ClockDurationController.tsx":"7","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\task\\TaskList.tsx":"8","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\task\\TaskItem.tsx":"9","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\navbar\\Navbar.tsx":"10","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\task\\TasksContainer.tsx":"11","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\modal\\FinishTaskModal.tsx":"12","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\modal\\Modal.tsx":"13","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\axios\\axios.ts":"14","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\clock\\CounterState.ts":"15","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\footer\\Footer.tsx":"16","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\schedule-list\\ScheduleListContainer.tsx":"17","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\schedule-list\\ScheduleList.tsx":"18","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\schedule-list\\ScheduleItem.tsx":"19","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\menu\\PomodoroContainer.tsx":"20","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\route-container\\RouteContainer.tsx":"21","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\redux\\reducers\\index.ts":"22","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\redux\\reducers\\schedulesReducer.ts":"23","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\redux\\reducers\\taskReducer.ts":"24","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\redux\\actions\\actionsTypes.ts":"25","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\field\\InputField.tsx":"26","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\schedule-creator\\ScheduleCreatorForm.tsx":"27"},{"size":489,"mtime":1610212906433,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":472,"mtime":1610232308787,"results":"31","hashOfConfig":"29"},{"size":6584,"mtime":1610305296754,"results":"32","hashOfConfig":"29"},{"size":878,"mtime":1610108591862,"results":"33","hashOfConfig":"29"},{"size":434,"mtime":1608728724606,"results":"34","hashOfConfig":"29"},{"size":1119,"mtime":1610113839058,"results":"35","hashOfConfig":"29"},{"size":807,"mtime":1610210148136,"results":"36","hashOfConfig":"29"},{"size":568,"mtime":1610216674894,"results":"37","hashOfConfig":"29"},{"size":333,"mtime":1610304892849,"results":"38","hashOfConfig":"29"},{"size":1346,"mtime":1610231928702,"results":"39","hashOfConfig":"29"},{"size":927,"mtime":1610111858163,"results":"40","hashOfConfig":"29"},{"size":614,"mtime":1608737933611,"results":"41","hashOfConfig":"29"},{"size":181,"mtime":1610403763161,"results":"42","hashOfConfig":"29"},{"size":116,"mtime":1610113733107,"results":"43","hashOfConfig":"29"},{"size":130,"mtime":1610114465016,"results":"44","hashOfConfig":"29"},{"size":912,"mtime":1610210219239,"results":"45","hashOfConfig":"29"},{"size":585,"mtime":1610137024998,"results":"46","hashOfConfig":"29"},{"size":515,"mtime":1610229998442,"results":"47","hashOfConfig":"29"},{"size":633,"mtime":1610231549132,"results":"48","hashOfConfig":"29"},{"size":1159,"mtime":1610304115643,"results":"49","hashOfConfig":"29"},{"size":302,"mtime":1610292687119,"results":"50","hashOfConfig":"29"},{"size":232,"mtime":1610211050254,"results":"51","hashOfConfig":"29"},{"size":238,"mtime":1610305116832,"results":"52","hashOfConfig":"29"},{"size":86,"mtime":1610305108560,"results":"53","hashOfConfig":"29"},{"size":410,"mtime":1610288957547,"results":"54","hashOfConfig":"29"},{"size":2391,"mtime":1610301755484,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"2neszr",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"58"},"F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\index.tsx",[],["124","125"],"F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\reportWebVitals.ts",[],["126","127"],"F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\App.tsx",[],"F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\clock\\ClockContainer.tsx",["128","129"],"import React from 'react'\r\nimport ClockController from './ClockController'\r\nimport Clock from './Clock'\r\nimport ClockDurationController from './ClockDurationController'\r\nimport { connect } from 'react-redux'\r\nimport './clock.css'\r\nimport FinishTaskModal from '../modal/FinishTaskModal'\r\nimport CounterState from './CounterState'\r\nimport { SET_TASK } from '../../redux/actions/actionsTypes'\r\n\r\ntype ClockState = {\r\n  minutes: number\r\n  seconds: number\r\n  counterState: CounterState\r\n  isStarted: boolean\r\n  showModal: boolean\r\n}\r\n\r\ninterface Task {\r\n  title: string\r\n  id: number\r\n  description: string\r\n  completed: boolean\r\n}\r\n\r\nclass ClockContainer extends React.Component<{ task: Task }, ClockState> {\r\n  private intervalId: NodeJS.Timeout | undefined\r\n  private readonly LEARNING_SCHEDULE_DURATION_IN_MINUTES = 25\r\n  private readonly PAUSE_DURATION_IN_MINUTES = 5\r\n  private readonly LONG_PAUSE_DURATION_IN_MINUTES = 10\r\n  private readonly FULL_MINUTE_COUNTED_FROM_ZERO = 59\r\n\r\n  constructor (props: any) {\r\n    super(props)\r\n    this.state = {\r\n      minutes: 25,\r\n      seconds: 0,\r\n      counterState: CounterState.SCHEDULE_COUNTER,\r\n      isStarted: false,\r\n      showModal: false\r\n    }\r\n\r\n    this.start = this.start.bind(this)\r\n    this.stop = this.stop.bind(this)\r\n    this.reset = this.reset.bind(this)\r\n    this.switchCounterState = this.switchCounterState.bind(this)\r\n    this.closeModal = this.closeModal.bind(this)\r\n    this.onYesSelected = this.onYesSelected.bind(this)\r\n    this.onNoSelected = this.onNoSelected.bind(this)\r\n  }\r\n\r\n  /* Check if task was changed*/\r\n  componentDidUpdate (prevProps: Readonly<{ task: Task }>) {\r\n    if (\r\n      prevProps &&\r\n      prevProps.task &&\r\n      prevProps.task.title !== this.props.task.title\r\n    ) {\r\n      this.reset()\r\n    }\r\n  }\r\n\r\n  /* Trigger count down every one second. */\r\n  componentDidMount () {\r\n    this.intervalId = setInterval(() => this.counter(), 1000)\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    if (this.intervalId) {\r\n      clearInterval(this.intervalId)\r\n    }\r\n  }\r\n\r\n  isCountFinished (): boolean {\r\n    const { seconds, minutes, counterState } = this.state\r\n\r\n    if (minutes - 1 < 0 && seconds - 1 < 0) {\r\n      this.reset()\r\n      if (counterState) {\r\n        this.openModal()\r\n      }\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  shouldCountDownByMinute (): boolean {\r\n    const { seconds, minutes } = this.state\r\n\r\n    if (seconds - 1 < 0) {\r\n      this.setState(state => ({\r\n        minutes: minutes - 1,\r\n        seconds: this.FULL_MINUTE_COUNTED_FROM_ZERO\r\n      }))\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  countDownBySecond () {\r\n    const { seconds } = this.state\r\n    this.setState(state => ({\r\n      seconds: seconds - 1\r\n    }))\r\n  }\r\n\r\n  counter () {\r\n    if (this.state.isStarted)\r\n      this.isCountFinished() === false &&\r\n        this.shouldCountDownByMinute() === false &&\r\n        this.countDownBySecond()\r\n  }\r\n\r\n  start () {\r\n    this.setState(state => ({ isStarted: true }))\r\n  }\r\n\r\n  stop () {\r\n    this.setState(state => ({ isStarted: false }))\r\n  }\r\n\r\n  reset () {\r\n    const { counterState } = this.state\r\n    switch (counterState) {\r\n      case CounterState.SCHEDULE_COUNTER:\r\n        this.setState(state => ({\r\n          minutes: this.LEARNING_SCHEDULE_DURATION_IN_MINUTES,\r\n          seconds: 0,\r\n          isStarted: false\r\n        }))\r\n        break\r\n\r\n      case CounterState.PAUSE_COUNTER:\r\n        this.setState(state => ({\r\n          minutes: this.PAUSE_DURATION_IN_MINUTES,\r\n          seconds: 0,\r\n          isStarted: false\r\n        }))\r\n        break\r\n\r\n      case CounterState.LONG_PAUSE_COUNTER:\r\n        this.setState(state => ({\r\n          minutes: this.LONG_PAUSE_DURATION_IN_MINUTES,\r\n          seconds: 0,\r\n          isStarted: false\r\n        }))\r\n        break\r\n\r\n      default:\r\n      case CounterState.SCHEDULE_COUNTER:\r\n        this.setState(state => ({\r\n          minutes: this.LEARNING_SCHEDULE_DURATION_IN_MINUTES,\r\n          seconds: 0,\r\n          isStarted: false\r\n        }))\r\n        break\r\n    }\r\n  }\r\n\r\n  switchCounterState (durationId: CounterState) {\r\n    switch (durationId) {\r\n      case CounterState.SCHEDULE_COUNTER:\r\n        this.setState({\r\n          minutes: this.LEARNING_SCHEDULE_DURATION_IN_MINUTES,\r\n          counterState: CounterState.SCHEDULE_COUNTER,\r\n          seconds: 0,\r\n          isStarted: false\r\n        })\r\n        break\r\n      case CounterState.PAUSE_COUNTER:\r\n        this.setState({\r\n          minutes: this.PAUSE_DURATION_IN_MINUTES,\r\n          counterState: CounterState.PAUSE_COUNTER,\r\n          seconds: 0,\r\n          isStarted: false\r\n        })\r\n        break\r\n      case CounterState.LONG_PAUSE_COUNTER:\r\n        this.setState({\r\n          minutes: this.LONG_PAUSE_DURATION_IN_MINUTES,\r\n          counterState: CounterState.LONG_PAUSE_COUNTER,\r\n          seconds: 0,\r\n          isStarted: false\r\n        })\r\n        break\r\n      default:\r\n        this.setState({\r\n          minutes: this.LEARNING_SCHEDULE_DURATION_IN_MINUTES,\r\n          seconds: 0,\r\n          isStarted: false\r\n        })\r\n        break\r\n    }\r\n  }\r\n\r\n  openModal () {\r\n    this.setState(state => ({ showModal: true }))\r\n  }\r\n\r\n  closeModal () {\r\n    this.setState(state => ({ showModal: false }))\r\n  }\r\n\r\n  onYesSelected () {\r\n    this.closeModal()\r\n  }\r\n\r\n  onNoSelected () {\r\n    this.closeModal()\r\n  }\r\n\r\n  render () {\r\n    if (this.props.task) {\r\n      const { title } = this.props.task\r\n      return (\r\n        <div className='clock_menu__container'>\r\n          <ClockDurationController\r\n            counterState={this.state.counterState}\r\n            switchDuration={this.switchCounterState}\r\n          />\r\n          <h1>{title}</h1>\r\n          <Clock\r\n            isStarted={this.state.isStarted}\r\n            start={this.start}\r\n            stop={this.stop}\r\n            reset={this.reset}\r\n            minutes={this.state.minutes}\r\n            seconds={this.state.seconds}\r\n          />\r\n          <FinishTaskModal\r\n            showModal={this.state.showModal}\r\n            handleClose={this.closeModal}\r\n            onYesSelected={this.onYesSelected}\r\n            onNoSelected={this.onNoSelected}\r\n          />\r\n        </div>\r\n      )\r\n    } else {\r\n      return <></>\r\n    }\r\n  }\r\n}\r\n\r\nexport const mapStateToProps = (state: any) => {\r\n  return { task: state.tasks.task }\r\n}\r\n\r\nexport const mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    onSet: (task: any) => dispatch({ type: SET_TASK, payload: task })\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClockContainer)\r\n","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\clock\\Clock.tsx",[],"F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\clock\\ClockController.tsx",[],["130","131"],"F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\clock\\ClockDurationController.tsx",[],"F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\task\\TaskList.tsx",["132"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { mapDispatchToProps, mapStateToProps } from '../clock/ClockContainer'\r\nimport Task from './TaskItem'\r\n\r\ninterface Task {\r\n  completed: boolean\r\n  title: string\r\n  description: string\r\n}\r\n\r\ninterface TaskListProp {\r\n  tasks: Task[] | undefined\r\n  title: string | undefined\r\n  onSet(task: Task): void\r\n}\r\n\r\nfunction TaskList ({ title, tasks, onSet }: TaskListProp) {\r\n  if (tasks && title) {\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        {tasks.length > 0 &&\r\n          tasks.map((task, index) => (\r\n            <Task key={index} task={task} handleTaskSetting={onSet} />\r\n          ))}\r\n      </div>\r\n    )\r\n  } else {\r\n    return <></>\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList)\r\n","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\task\\TaskItem.tsx",[],"F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\navbar\\Navbar.tsx",[],"F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\task\\TasksContainer.tsx",[],"F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\modal\\FinishTaskModal.tsx",[],"F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\modal\\Modal.tsx",["133"],"import React, { Component } from 'react'\r\nimport { createPortal } from 'react-dom'\r\n\r\nconst modalRoot = document.getElementById('modal')\r\n\r\nexport default class Modal extends Component {\r\n  element: HTMLDivElement\r\n  constructor (props: any) {\r\n    super(props)\r\n    this.element = document.createElement('div')\r\n  }\r\n\r\n  componentDidMount () {\r\n    if (modalRoot) {\r\n      modalRoot.appendChild(this.element)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    if (modalRoot) {\r\n      modalRoot.removeChild(this.element)\r\n    }\r\n  }\r\n  render () {\r\n    return createPortal(this.props.children, this.element)\r\n  }\r\n}\r\n",["134","135"],"F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\axios\\axios.ts",[],"F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\clock\\CounterState.ts",[],"F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\footer\\Footer.tsx",[],"F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\schedule-list\\ScheduleListContainer.tsx",[],"F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\schedule-list\\ScheduleList.tsx",[],"F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\schedule-list\\ScheduleItem.tsx",["136"],"import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Schedule } from './Schedule'\r\n\r\ninterface ScheduleItemProps {\r\n  schedule: Schedule\r\n}\r\n\r\nfunction ScheduleItem (props: ScheduleItemProps) {\r\n  return (\r\n    <li className='schedule__item'>\r\n      <h1>{props.schedule.title}</h1>\r\n      <p>{props.schedule.description}</p>\r\n      <Link to={`/pomodoro/${props.schedule.id}`} className='primary'>\r\n        View\r\n      </Link>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default ScheduleItem\r\n","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\menu\\PomodoroContainer.tsx",["137"],"import React, { Component } from 'react'\r\nimport ClockContainer from '../clock/ClockContainer'\r\nimport TasksContainer from '../task/TasksContainer'\r\nimport './menu.css'\r\n\r\nclass PomodoroContainer extends Component<{}> {\r\n  constructor (props: any) {\r\n    super(props)\r\n  }\r\n\r\n  componentDidMount () {}\r\n\r\n  render () {\r\n    return (\r\n      <div className='menu'>\r\n        <div className='task__container'>\r\n          <TasksContainer />\r\n        </div>\r\n        <div>\r\n          <ClockContainer />\r\n        </div>\r\n        <div className='schedules__container'></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PomodoroContainer\r\n","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\route-container\\RouteContainer.tsx",["138"],"import React, { Component } from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport PomodoroContainer from '../menu/PomodoroContainer'\r\nimport ScheduleCreatorForm from '../schedule-creator/ScheduleCreatorForm'\r\nimport ScheduleListContainer from '../schedule-list/ScheduleListContainer'\r\nimport axios from '../../axios/axios'\r\n\r\nexport default class RouteContainer extends Component {\r\n  constructor (props: any) {\r\n    super(props)\r\n    this.sendSchedule = this.sendSchedule.bind(this)\r\n  }\r\n\r\n  async sendSchedule (values: any) {}\r\n\r\n  async submit (values: any) {\r\n    try {\r\n      const response = await axios.post('/schedule/add', values)\r\n    } catch (error) {}\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Switch>\r\n        <Route path='/pomodoro/:id'>\r\n          <PomodoroContainer />\r\n        </Route>\r\n        <Route path='/create'>\r\n          <div className='content'>\r\n            <ScheduleCreatorForm onSubmit={this.submit} />\r\n          </div>\r\n        </Route>\r\n        <Route path='/'>\r\n          <div className='content'>\r\n            <ScheduleListContainer />\r\n          </div>\r\n        </Route>\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\redux\\reducers\\index.ts",[],"F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\redux\\reducers\\schedulesReducer.ts",["139"],"import { FETCH_SCHEDULES } from '../actions/actionsTypes'\r\n\r\nexport default (state = [], action: any) => {\r\n  switch (action.type) {\r\n    case FETCH_SCHEDULES:\r\n      return action.payload\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\redux\\reducers\\taskReducer.ts",["140"],"import { SET_TASK } from '../actions/actionsTypes'\r\n\r\nexport default (state = {}, action: any) => {\r\n  switch (action.type) {\r\n    case SET_TASK:\r\n      return { ...state, task: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\redux\\actions\\actionsTypes.ts",[],"F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\field\\InputField.tsx",[],["141","142"],"F:\\Dev\\react\\pomodoro-learning-scheaduler\\learning-scheduler\\src\\components\\schedule-creator\\ScheduleCreatorForm.tsx",["143"],"import React from 'react'\r\nimport { Field, FieldArray, reduxForm } from 'redux-form'\r\nimport InputField from '../field/InputField'\r\nimport './form.css'\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }: any) => (\r\n  <div>\r\n    <label>{label}</label>\r\n    <div>\r\n      <input {...input} type={type} placeholder={label} />\r\n      {touched && error && <span>{error}</span>}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst renderTasks = ({ fields, meta: { error } }: any) => (\r\n  <ul>\r\n    {fields.map((task: any, index: number) => (\r\n      <li className='item' key={index}>\r\n        <div>\r\n          <Field\r\n            name={`${task}.title`}\r\n            type='text'\r\n            component={renderField}\r\n            label='Task'\r\n          />\r\n\r\n          <Field\r\n            name={`${task}.description`}\r\n            type='text'\r\n            component={renderField}\r\n            label='Descpription'\r\n          />\r\n        </div>\r\n        <button\r\n          className='red'\r\n          type='button'\r\n          title='Remove Task'\r\n          onClick={() => fields.remove(index)}\r\n        >\r\n          x\r\n        </button>\r\n      </li>\r\n    ))}\r\n    {error && <li className='error'>{error}</li>}\r\n    <li>\r\n      <button className='green' type='button' onClick={() => fields.push()}>\r\n        Add Task\r\n      </button>\r\n    </li>\r\n  </ul>\r\n)\r\n\r\nfunction ScheduleCreatorForm (props: any): JSX.Element {\r\n  const { handleSubmit, pristine, reset, submitting } = props\r\n\r\n  return (\r\n    <div className='form__container'>\r\n      <h1>Create schedule</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <Field name='title' type='text' label='Title' component={renderField} />\r\n        <Field\r\n          name='description'\r\n          type='text'\r\n          label='Description'\r\n          component={renderField}\r\n        />\r\n        <FieldArray name='tasks' component={renderTasks} />\r\n        <div className='control__panel'>\r\n          <button className='blue' type='submit' disabled={submitting}>\r\n            Submit\r\n          </button>\r\n          <button\r\n            className='black'\r\n            type='button'\r\n            disabled={pristine || submitting}\r\n            onClick={reset}\r\n          >\r\n            Clear Values\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'createScheduleForm'\r\n})(ScheduleCreatorForm)\r\n",{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"144","replacedBy":"148"},{"ruleId":"146","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":23},{"ruleId":"154","severity":1,"message":"155","line":150,"column":7,"nodeType":"156","messageId":"157","endLine":156,"endColumn":14},{"ruleId":"144","replacedBy":"158"},{"ruleId":"146","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":6,"column":11,"nodeType":"152","messageId":"162","endLine":6,"endColumn":15},{"ruleId":"150","severity":1,"message":"163","line":1,"column":8,"nodeType":"152","messageId":"153","endLine":1,"endColumn":13},{"ruleId":"144","replacedBy":"164"},{"ruleId":"146","replacedBy":"165"},{"ruleId":"150","severity":1,"message":"166","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":25},{"ruleId":"167","severity":1,"message":"168","line":7,"column":3,"nodeType":"169","messageId":"170","endLine":9,"endColumn":4},{"ruleId":"150","severity":1,"message":"171","line":18,"column":13,"nodeType":"152","messageId":"153","endLine":18,"endColumn":21},{"ruleId":"172","severity":1,"message":"173","line":3,"column":1,"nodeType":"174","endLine":10,"endColumn":2},{"ruleId":"172","severity":1,"message":"173","line":3,"column":1,"nodeType":"174","endLine":10,"endColumn":2},{"ruleId":"144","replacedBy":"175"},{"ruleId":"146","replacedBy":"176"},{"ruleId":"150","severity":1,"message":"177","line":3,"column":8,"nodeType":"152","messageId":"153","endLine":3,"endColumn":18},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],["178"],["179"],"@typescript-eslint/no-unused-vars","'ClockController' is defined but never used.","Identifier","unusedVar","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected",["178"],["179"],"@typescript-eslint/no-redeclare","'Task' is already defined.","redeclared","'React' is defined but never used.",["178"],["179"],"'useState' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'response' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["178"],["179"],"'InputField' is defined but never used.","no-global-assign","no-unsafe-negation"]